%Pumping Curve processing script from raw
load('workspace.mat');


%Raw data
% figure
% semilogy(t0p.Elapsed./60, t0p.Pressure)


%% Retrieve exclusions manually from cftool

t0p.Pressure([731 772 854 1044 1045 1117 1118 1198 1429 1513 1594 1595 1635 1636 1677 1755 1863 1927 1928 1929 1930 1952 2047 2114 2210 2310 2408 2411 2472 2561 2570 2646 2647 2648 2649 2650 2652 2666 2670 2739 2748 2751 2752 2753 2754 2755 2756 2757 2758 2759 2760 2761 2762 2771 3004 3084 3089 3090 3102 3211 3246 3492 3604 3706 3805 3844 3845 3906 4074 4075 4076 4190 4253 4254 4255 4256 4257 4258 4301 4348 4349 4579 4647 4648 4649 4650 4651 4652 4653 4654 5464 5692 6561 6597 6598 6615 6616 6617 7610 7870 7902 8132])= NaN;
t1p.Pressure([266 271 332 365 398 399 403 430 501 502 512 516 644 704 705 706 707 723 724 768 769 799 862 919 1001 1002 1003 1054 1055 1056 1079 1147 1148 1149 1213 1214 1215 1259 1260 1328 1329 1416 1417 1418 1517 1518 1575 1576 1577 1615 1708 1709 1710 1798 1799 1800 1801 1802 1836 1837 1978 2115 2116 2117 2118 2274 2275 2276 2363 2364 2365 2485 2486 2487 2612 2613 2614 2615 2787 2848 2849 2853 3051 3052 3053 3161 3162 3288 3357 3358 3359 3363 3524 3648 4571 5074 5075 5076 5089 5090 5091 5093]) = NaN;
t2p.Pressure([2451 2552 2606 2779 2854 3076 3424 3425 3556 4278 4279 4283 4284 4287 4494 4670 4671 4674 4833 4834 4847 4848 4849 4893 4894 4898 4899 4905 4907 4910 4911 4913 4914 4915 5031 5038 5057 6223 6279 6305 6306 6318 6323 6325 6332 6336 6371 6619 6620 6621 6622 6634 6635 6636 6637 6638 6639 6640 6641 6642 6643 6644 6645 6646 6647 6648 6650 6651 6652 6653 6654 6656 6660 6661 6664 6794 6825 6837 6903 8071 8080 8093 8105 8108 8111 8114 8116 8117 8118 8119 8120 8124 8125 8126 8127 8129 8130 8131 8132 8133 8134 8135 8136 8137 8143 8144 8147 8150 8153 8159 9525 9535 10007 10022 10031]) = NaN;
t4p.Pressure([459 460 461 462 463 1081 1195 1578 2070 2151 2210 2417 2672 2710 2711 2723 2769 2918 2957 2997 3056 3238 3295 3342 3360 3490 3540 3587 3636 3823 3842 3942 4062 4205 4211 4702 4707 4815 4867 4877 7619 7620 7621 7622 7623 7624 7625 8271 8272 8273 8274 8690 8691 8692 20956 21649 21650 21651 21652 21653 21654 21655 21656 21657 21658 21659 21660 21661 21662 21663 21664 21665 21666 21667 21668 21669 21670 21671 21672 21673 21674 21675 21676 21677 21678 21679 21680 21681 21682 21683 21684 21685 21686 21687 21688 21689 21690 21691 21692 21693 21694 21695 21696 21697 21698 21699 21702 21704 21705 21718 21719 21720 21721 21722 21740 21741 21758 21759 21760 21828 21829 21830 21831 21832 21851 21873 21874 21875 21876 21904 21922 21942 21943 21944 21964 21980 22011 22268 22291 22296 22302 22317 22501 22505 22510]) = NaN;
t7p.PressureaN;
t14pfull.Pressure([2567 2570 2573 2772 2940 2941 2942 2943 2944 2945 2946 3173 3174 3175 3176 3549 3550 3551 3552 3553 3554 3555 3556 4086 4087 4088 4089 4090 4091 4656 4657 4660 4663 4664 4724 4744 4745 4746 4747 4748 4749 4750 4751 4752 6847 6848 6849 6850 6864 6865 6866 6867 6868 6869 6888 6889 6890 6891 6896 6897 6898 6902 6903 6904 6905 6906 6961 6982 7885 7922 8174 8175 8182 8206 8207 8208 8209 8210 8302 10559 10657 10691 10781 10788 10792 10836 10865 10903 16259 16301 16746 16764 16765 16766 16772 16773 16776 16778 16780 16781 16782 16785 16787 16788 16789 16790 16793 16794 16795 16797 16798 16799 16801 16803 16804 16806 16807 16808 16809 16810 16811 16812 16813 16816 16819 16820 16821 16822 16825 16827 16870 17717 17854 17881 17882 17889 17894 17895 17896 17898 17906 17907 17908 17911 17912 17914 17915 17916 17917 17919 17925 17942 17961 17977 18310 18311 18359 18362 18379 18479 18483 18504 18532 18570 18582 18592 18814 18893 18915 18921 18972 18973 19012 28016 28017 28018 28019 28020 28021 28022 28023 28024 28025 28026 28027 28028 28029 28030 28031 28032 28033 28034 28035 28036 28037 28038 28039 28331 28708 28894 52288 52393 52415 52445 52462 52524 52531 52544 52612 53018 53033 53039 53060 53067 53074 53075 53079 53080 53086 53087 53092 53102 53103 53106 53107 53117 53118 53120 53121 53122 53123 53124 53127 53128 53129 53139 53140 53141 53142 53145 53146 53147 53148 53149 53150 53151 53152 53165 53166 53167 53168 53169 53170 53171 53172 53196 53197 53198 53199 53200 53201 53202 53203 53204 53205 53206 53207 53208 53209 53210 53211 53240 53241 53242 53243 53263 53264 53265 53266 53269 53270 53272 53273 53281 53800 53808 53812 53832 53850 53854 53855 53861 53881 55139 55172 55173 55174 55221 55269 55286 55287 55288 55290 59642 59684 59696 59698 59699 59711 59712 59715 59716 59717 59719 59720 59722 59724 59726 59734 59738 59757 59889 59892 59893 59894 59895 59898 59899 59900 59901 59903 59908 59910 59913 59915 59918 59920 59925 59926 59929 59931 59932 59933 59937 59938 59939 59940 59941 59943 59944 59947 59960 59963 59965 59966 59967 59969 59971 60680 60683 60686 60687 60689 60692 60693 60694 60695 60696 60697 60698 60699 60700 60701 60703 60704 60705 60706 60707 60708 60710 60711 60712 60713 60714 60715 60716 60717 60718 60719 60720 60721 60722 60723 60724 60725 60727 60728 60729 60730 60731 60732 60733 60734 60736 60737 60738 60739 60740 60741 60742 60743 60744 60745 60746 60747 60748 60749 60750 60751 60752 60753 60754 60755 60756 60757 60758 60759 60760 60762 60763 60764 60765 60766 60767 60768 60769 60770 60771 60772 60773 60774 60775 60776 60777 60778 60779 60780 60784 60785 60786 60787 60789 60790 60791 60793 60794 60798 60800 60801 60818 60835 62597 62616 62633 62664 62852 63037 63044 63045 63046 63047 63048 63050 63051 63052 63053 63054 63056 63057 63058 63061 63062 63065 63066 63067 63068 63071 63072 63073 63077 63078 63079 63080 63081 63082 63091 63092 63095 63098 63101 63109 63113 63114 63344 63353 63369 63399 65074 65093 66719 66720 66728 66968 66973 66980 66984 66997 66999 67001 68386 68393 68436 69040]) = NaN;
emptychamber.Pressure([393 394 395 476 477 542 543 703 788 862 863 865 952 953 954 955 1042 1043 1123 1124 1125 1126 1130 1160 1162 1163 1164 1260 1262 1359 1361 1450 1456 1460 1553 1554 1555 1566 1567 1568 1571 1572 1694 1770 1772 1774 1786 1889 2008 2009 2010 2019 2020 2029 2030 2164 2225 2226 2227 2231 2232 2381 2499 2501 2631 2639 2640 2716 2717 2718 2878 2879 2885 2887 3075 3426 3427 3505 3508 3509 3510 3512 3516 3517 3532 3541 3544 3586 3739 3940 4040 4054 4057 4166 4217 4232 4243 4608 4809 4987 4988 4993 4994 4996 4999 5007 5205 5207 5219 5570 5956 5984 6030 6035 6040 6042 6057 6060 6061 6071 6170 6193 6203 6210 6225 6232 6249 6251 6256 6470 6471 6472 6473 6474 6475 6476 6477 6478 6479 6480 6481 6482 6483 6979 6980 6981 6982 6983 6984 6985 6986 6987 6988 6989 6990 6991 6992 6993 6994 6995 6996 6997 6998 6999 7000 7001 7411 7485 7491 7492 7506 7609 8096 8101 8124 8125 8126 8127 8128 8129 8130 8131 8132 8133 8134 8135 8136 8137 8138 8139 8140 8141 8694 8777 8820 8849 8891 8908 8910 8923 8932 8941 12738 12739 12857 12874 12875 12876 12877 12878 12879 12880 12881 12882 12900 12904 12908 12909 12910 12912 12913 12914 12915 12917 12918 12919 12920 12922 12923 12924 12928 12930 12931 12933 12934 12935 12936 12937 12940 12946 12949 12952 12953 12978 13670 13891 13940 14318 14319 14320 14321 14749 14750 14751 15263 15290 15306 15307 15308 15309 15310 15311 15312 15313 15314 15315 15316 15317 15321 15322 16027 16679 17080 17081 17082 17083 17084 17085 17086 17087 17088 17089 17288 18772 18773 18774 18789 18804 18805 18809 18823 18824 18825 18826]) = NaN;



% figure 
% hold on
% plot(emptychamber.Elapsed./60, emptychamber.Pressure,'x', 'MarkerSize', 1.5);
% plot(t0p.Elapsed./60, t0p.Pressure, 'xr', 'MarkerSize', 1.5);
% plot(t1p.Elapsed./60, t1p.Pressure, 'xb', 'MarkerSize', 1.5);
% plot(t2p.Elapsed./60, t2p.Pressure, 'xg', 'MarkerSize', 1.5);
% plot(t4p.Elapsed./60, t4p.Pressure, 'xm', 'MarkerSize', 1.5);
% plot(t7p.Elapsed./60, t7p.Pressure, 'xk', 'MarkerSize', 1.5);
% plot(t14pfull.Elapsed./60, t14pfull.Pressure, 'xc', 'MarkerSize', 1.5);
% 
% 
% set(gca, 'YScale', 'log');
% xlim([0.5 180]);
% hold off

%% De-step curves due to gauge resolution

for i_ = 1:length(emptychamber.Pressure)
   
    indices = find(emptychamber.Pressure == emptychamber.Pressure(i_));
    emptychamber.Elapsed([indices]) = mean(emptychamber.Elapsed([indices]));
 
end

for i_ = 1:length(t0p.Pressure)
   
    indices = find(t0p.Pressure == t0p.Pressure(i_));
    
    t0p.Elapsed([indices]) = mean(t0p.Elapsed([indices]));
 
end

for i_ = 1:length(t1p.Pressure)
   
    indices = find(t1p.Pressure == t1p.Pressure(i_));
    t1p.Elapsed([indices]) = mean(t1p.Elapsed([indices]));
 
end

for i_ = 1:length(t2p.Pressure)
   
    indices = find(t2p.Pressure == t2p.Pressure(i_));
    t2p.Elapsed([indices]) = mean(t2p.Elapsed([indices]));
 
end

for i_ = 1:length(t4p.Pressure)
   
    indices = find(t4p.Pressure == t4p.Pressure(i_));
    t4p.Elapsed([indices]) = mean(t4p.Elapsed([indices]));
 
end

for i_ = 1:length(t7p.Pressure)
   
    indices = find(t7p.Pressure == t7p.Pressure(i_));
    t7p.Elapsed([indices]) = mean(t7p.Elapsed([indices]));
 
end

for i_ = 1:length(t14pfull.Pressure)
   
    indices = find(t14pfull.Pressure == t14pfull.Pressure(i_));
    t14pfull.Elapsed([indices]) = mean(t14pfull.Elapsed([indices]));
 
end


t0p.logPressure = log(t0p.Pressure);
t1p.logPressure = log(t1p.Pressure);
t2p.logPressure = log(t2p.Pressure);
t4p.logPressure = log(t4p.Pressure);
t7p.logPressure = log(t7p.Pressure);
t14pfull.logPressure = log(t14pfull.Pressure);
emptychamber.logPressure = log(emptychamber.Pressure);

% figure 
% hold on
% plot(emptychamber.Elapsed./60, emptychamber.Pressure, 'x', 'MarkerSize', 8);
% plot(t0p.Elapsed./60, t0p.Pressure, 'xr', 'MarkerSize', 8);
% plot(t1p.Elapsed./60, t1p.Pressure, 'xb', 'MarkerSize', 8);
% plot(t2p.Elapsed./60, t2p.Pressure, 'xk', 'MarkerSize', 8);
% plot(t4p.Elapsed./60, t4p.Pressure, 'xc', 'MarkerSize', 8);
% plot(t7p.Elapsed./60, t7p.Pressure, 'MarkerSize', 8);
% plot(t14pfull.Elapsed./60, t14pfull.Pressure, 'MarkerSize', 8);
% 
% set(gca, 'YScale', 'log');
% %set(gca, 'XScale', 'log');
% xlim([0.5 180]);
% ylabel('Total Pressure /mbar');
% xlabel('Time Elapsed /hours');
% title('Baked 3D printed plastics pumping curves')
% 
% hold off
%% Remove Duplicate coordinates

[emptychamber.UPressure, indexempty] = unique(emptychamber.Pressure);
[t0p.UPressure, index0] = unique(t0p.Pressure);
[t1p.UPressure, index1] = unique(t1p.Pressure);
[t2p.UPressure, index2] = unique(t2p.Pressure);
[t4p.UPressure, index4] = unique(t4p.Pressure);
[t7p.UPressure, index7] = unique(t7p.Pressure);
[t14pfull.UPressure, index14] = unique(t14pfull.Pressure);

emptychamber.logUPressure = log(emptychamber.UPressure);
t0p.logUPressure = log(t0p.UPressure);
t1p.logUPressure = log(t1p.UPressure);
t2p.logUPressure = log(t2p.UPressure);
t4p.logUPressure = log(t4p.UPressure);
t7p.logUPressure = log(t7p.UPressure);
t14pfull.logUPressure = log(t14pfull.UPressure);


% figure
% hold on
% plot(emptychamber.Elapsed(indexempty)./60, emptychamber.UPressure, 'x', 'LineWidth', 1);
% plot(t0p.Elapsed(index0)./60, t0p.UPressure,'xr', 'LineWidth', 1);
% plot(t1p.Elapsed(index1)./60, t1p.UPressure,'xk', 'LineWidth', 1);
% plot(t2p.Elapsed(index2)./60, t2p.UPressure,'xb', 'LineWidth', 1);
% plot(t4p.Elapsed(index4)./60, t4p.UPressure,'xc', 'LineWidth', 1);
% plot(t7p.Elapsed(index7)./60, t7p.UPressure, 'LineWidth', 1);
% plot(t14pfull.Elapsed(index14)./60, t14pfull.UPressure, 'LineWidth', 1);
% %plot(linspace(0,t2p.Elapsed(end), length(t2p.Elapsed))./60, interpol)
% 
% set(gca, 'YScale', 'log');
% ylabel('Total Pressure /mbar');
% xlabel('Time Elapsed /hours');
% title('Baked 3D printed plastics pumping curves after exposure to atmosphere')
% legend('empty chamber','0 days', '1 day', '2 days', '4 days', '7 days', '14 days');
% xlim([0.5 60]);
% hold off

 %%
% %Interpolate t2p because of database - CUBIC SPLINE SHAPE-PRESERVING
% %newx = linspace(0,t2p.Elapsed(end)./60, (length(t2p.Elapsed(index2))+3980)/4);
% interpol_spacing = 0.2;
% newx = linspace(0, max(t2p.Elapsed./60), round(max(t2p.Elapsed)./60./interpol_spacing));
% newt = t2p.Elapsed(index2)./60;
% pnan = isnan(t2p.UPressure);
% interpol = interp1(newt(~pnan), t2p.UPressure(~pnan), newx, 'spline');
% 
% figure
% hold on
% plot(newx, interpol, 'xb')
% %plot(t2p.Elapsed(index2)./60, t2p.UPressure, 'xr')
% 
% set(gca, 'YScale', 'log')
% hold off
%% Create plot
figure
hold on
plot(emptychamber.Elapsed(indexempty)./60, emptychamber.UPressure, 'LineWidth', 1.5);
plot(t0p.Elapsed(index0)./60, t0p.UPressure, 'LineWidth', 1.5);
plot(t1p.Elapsed(index1)./60, t1p.UPressure, 'LineWidth', 1.5);
plot(t2p.Elapsed(index2)./60, t2p.UPressure, 'LineWidth', 1.5);
%plot(newx, interpol, 'x', 'LineWidth', 0.75);
plot(t4p.Elapsed(index4)./60, t4p.UPressure, 'LineWidth', 1.5);
% plot(t7p.Elapsed(index7)./60, t7p.UPressure,'xc', 'LineWidth', 0.75);
% plot(t14pfull.Elapsed(index14)./60, t14pfull.UPressure,'xc', 'LineWidth', 0.75);

set(gca, 'YScale', 'log');
%set(gca, 'XScale', 'log');
set(gca,'FontSize',14,'LineWidth',1)
ylabel('Pressure/mbar');
xlabel('Time/hrs');
%title('Baked 3D printed plastics pumping curves after exposure to atmosphere')
legend('Empty', '<1 hour', '1 day', '2 days', '4 days');
%legend('0 days', '1 day', '2 days', '4 days', '7 days', '14 days');
%xlim([0.5 60]);
xlim([0 20]);
ylim([1e-8 1e-6]);
box on
%hold off
%print('-dpng', '-r300', 'pumpingcurvesloglog.png')

%  exportgraphics(gcf,'..\Figures\Pumpdown_curve.eps')
%  savefig(['..\Figures\Pumpdown_curve.fig'])





% figure
% hold on
% plot(emptychamber.Elapsed./60, emptychamber.Pressure, 'LineWidth', 1.5);
% plot(t0p.Elapsed./60, t0p.Pressure, 'LineWidth', 1.5);
% plot(t1p.Elapsed./60, t1p.Pressure, 'LineWidth', 1.5);
% plot(t2p.Elapsed./60, t2p.Pressure, 'LineWidth', 1.5);
% %plot(newx, interpol, 'x', 'LineWidth', 0.75);
% plot(t4p.Elapsed./60, t4p.Pressure, 'LineWidth', 1.5);
% % plot(t7p.Elapsed(index7)./60, t7p.UPressure,'xc', 'LineWidth', 0.75);
% % plot(t14pfull.Elapsed(index14)./60, t14pfull.UPressure,'xc', 'LineWidth', 0.75);
% 
% set(gca, 'YScale', 'log');
% %set(gca, 'XScale', 'log');
% set(gca,'FontSize',14,'LineWidth',1)
% ylabel('Pressure/mbar');
% xlabel('Time/hrs');
% %title('Baked 3D printed plastics pumping curves after exposure to atmosphere')
% legend('Empty', '<1 hour', '1 day', '2 days', '4 days');
% %legend('0 days', '1 day', '2 days', '4 days', '7 days', '14 days');
% %xlim([0.5 60]);
% xlim([0 20]);
% ylim([1e-8 1e-6]);





